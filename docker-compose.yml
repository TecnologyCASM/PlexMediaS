---
services:
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: PLEX
    environment:
      - TZ=${TZ}
      - VERSION=docker
    volumes:
      - ${MEDIA}:/media
      - ${STORAGE}/tmp:/tmp
      - ${STORAGE}/Plex Media Server:/root/Library/Application Support/Plex Media Server
    expose:
     - 32400
     - 33400
    restart: unless-stopped
    network_mode: "host"
#--------------------------------------------------------------------#
  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: TORRENT
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - USER=${USER}
      - PASS=${PASS}
    volumes:
      - ./transmission:/config
      - ${STORAGE}/torrents:/downloads
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped
#--------------------------------------------------------------------#
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: SONARR
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - USER=${USER}
      - PASS=${PASS}
    volumes:
      - ./sonarr/data:/config
      - ${STORAGE}/torrents:/downloads
      - ${MEDIA}:/media
    ports:
      - 8989:8989
    restart: unless-stopped
#--------------------------------------------------------------------#
  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: JACKETT
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - AUTO_UPDATE=true
    volumes:
      - ./jackett/data:/config
      - ${STORAGE}/blackhole:/downloads
    ports:
      - 9117:9117
    restart: unless-stopped
#--------------------------------------------------------------------#
#  jellyfin:
#    image: lscr.io/linuxserver/jellyfin:latest
#    container_name: JELLYFIN
#    environment:
#      - PUID=${PUID}
#      - PGID=${PGID}
#      - TZ=${TZ}
#    volumes:
#      - ${STORAGE}/library:/config
#      - ${MEDIA}:/media/peliculas
#      - ${MEDIA}:/media/series
#    ports:
#      - 8096:8096
#    restart: unless-stopped
#--------------------------------------------------------------------#
#--------------------------------------------------------------------#
  samba:
    image: dperson/samba
    container_name: SAMBA
    command: '-u "${USER};${PASS}" -s "media;/media;yes;no" -s "downloads;/downloads;yes;no"'
    stdin_open: true
    tty: true
    environment:
      - TZ=${TZ}
      - USER=${USER}
      - PASS=${PASS}
    volumes:
      - ${MEDIA}:/media
      - ${STORAGE}/torrents:/downloads
    ports:
      - 139:139
      - 445:445
    restart: always
