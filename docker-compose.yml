version: '3.3'

services:
  # Servicio Plex
  plex:
    image: linuxserver/plex:latest
    container_name: plex
    environment:
      - VERSION=docker
    volumes:
      - ${PLEX_CONFIG}:/config
      - ${MEDIA}:/media
    ports:
      - "32400:32400"
    restart: unless-stopped
    networks:
      my_network:
        ipv4_address: 10.7.1.2  # Dirección IP estática para Plex

  # Servicio Samba
  samba:
    image: dperson/samba:latest
    container_name: samba
    environment:
      - SAMBA_USER=${SAMBA_USER}
      - SAMBA_PASSWORD=${SAMBA_PASSWORD}
    volumes:
      #- ${MEDIA}:/shared
      - ${MEDIA}:/media
      - ${STORAGE}/torrents:/downloads
    ports:
      - "139:139/tcp"
      - "445:445/tcp"
    restart: unless-stopped
    command: >
      sh -c "samba.sh -u '${SAMBA_USER};${SAMBA_PASSWORD}' -s 'media;/media;yes;no;no;all;none' -s 'downloads;/downloads;yes;no;no;all;none' "
    networks:
      my_network:
        ipv4_address: 10.7.1.3  # Dirección IP estática para Samba

  # Servicio Transmission
  transmission:
    image: linuxserver/transmission:latest
    container_name: transmission
    environment:
      - TZ=${TZ}
      - USER=${TRANSMISSION_USER}
      - PASS=${TRANSMISSION_PASSWORD}
    volumes:
      - ${TRANSMISSION_CONFIG}:/config
      - ${MEDIA}:/downloads
    ports:
      - "9091:9091"
      - "51413:51413"
      - "51413:51413/udp"
    restart: unless-stopped
    networks:
      my_network:
        ipv4_address: 10.7.1.4  # Dirección IP estática para Transmission

  # Servicio Flexget
  flexget:
    image: flexget/flexget:latest
    container_name: flexget
    environment:
      - TZ=${TZ}
    volumes:
      - ${FLEXGET_CONFIG}:/config
      - ${MEDIA}:/downloads
    ports:
      - "3539:3539"
    restart: unless-stopped
    command: >
      sh -c "flexget daemon start --autoreload-config && tail -f /dev/null"
    networks:
      my_network:
        ipv4_address: 10.7.1.5  # Dirección IP estática para Flexget

  # Servicio Pi-hole & Unbound
  pihole:
    container_name: Pihole-UnboundDNS
    image: mwatz/pihole-unbound-updatelists:latest
    ports:
      - 443:443/tcp
      - 55:53/tcp
      - 55:53/udp
      - 8080:80/tcp
    environment:
      - FTLCONF_LOCAL_IPV4=${FTLCONF_LOCAL_IPV4}
      - TZ=${TZ:-UTC}
      - WEBPASSWORD=${WEBPASSWORD}
      - WEBTHEME=${WEBTHEME:-default-light}
      - REV_SERVER=${REV_SERVER:-false}
      - REV_SERVER_TARGET=${REV_SERVER_TARGET}
      - REV_SERVER_DOMAIN=${REV_SERVER_DOMAIN}
      - REV_SERVER_CIDR=${REV_SERVER_CIDR}
      - PIHOLE_DNS_=127.0.0.1#5335
      - DNSSEC="true"
      - DNSMASQ_LISTENING=single
    volumes:
      - ${PIHOLE_UNBOUND_CONFIG}:/etc/pihole
      #- etc_pihole-unbound:/etc/pihole:rw
      #- etc_pihole_dnsmasq-unbound:/etc/dnsmasq.d:rw
    restart: unless-stopped
    networks:
      my_network:
        ipv4_address: 10.7.1.6  # Dirección IP estática para Pi-hole & Unbound

  # Servicio wg-easy
  wg-easy:
    depends_on: [pihole]
    image: ghcr.io/wg-easy/wg-easy:latest
    container_name: WireGuard-VPN
    hostname: "WireGuard-VPN"
    cap_add:
      - NET_ADMIN   # Recomendado pero no obligatorio (DHCP necesita NET_ADMIN).
      - SYS_MODULE
    environment:
      - LANG=es
      - WG_HOST=casmvpn.duckdns.org # Dominio Dinamico con IP Publica del ISP.
      - PASSWORD=${WEBPASSWORD}
      - PORT=51821  # Puerto TCP Administracion Web del Servicio.
      - WG_PORT=51820   # Puerto UDP del Servicio.
      - WG_DEFAULT_DNS=10.7.1.6 # Direccion IP Dns PiHole y Unbound DNS.
      - WG_DEFAULT_ADDRESS=10.7.0.x # Rango IP asignacion clientes WireGuard.
      - WG_ALLOWED_IPS=0.0.0.0/0, ::/0  # Rango de Direcciones IP permitidos https://www.procustodibus.com/blog/2021/03/wireguard-allowedips-calculator/.
    volumes:
      - ./wireguard:/etc/wireguard
    ports:
      - "51820:51820/udp"   # Puerto UDP del servicio.
      - "51821:51821/tcp"   # Puerto TCP Administracion Web.
    dns:
      - 10.7.1.7  # Direccion IP WireGuard.
      - 10.7.1.6 # Direccion IP Pihole-UnboundDNS.
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    restart: unless-stopped
    networks:
      my_network:
        ipv4_address: 10.7.1.7  # Dirección IP estática para wg-easy

  # Servicio Docker Controller Bot
#  docker-controller-bot:
#    image: dgongut/docker-controller-bot:latest
#    container_name: docker-controller-bot
#    environment:
#      - BOT_TOKEN=${BOT_TOKEN}
#      - CHAT_ID=${CHAT_ID}
#      - TZ=${TZ}
#    restart: unless-stopped
#    networks:
#      my_network:
#        ipv4_address: 10.7.1.8  # Dirección IP estática para Docker Controller Bot

  # Servicio Portainer
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: unless-stopped
    networks:
      my_network:
        ipv4_address: 10.7.1.9  # Dirección IP estática para Portainer

volumes:
  portainer_data:

networks:
  my_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.7.1.0/24
